/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package client;

import ejb_cl_pkg.EJB_CLRemote;
import ejb_cl_pkg.GeoCoordinate;
import ejb_cl_pkg.LocalServer;

import java.io.FileInputStream;
import java.net.InetAddress;

import java.util.Observable;
import java.util.Properties;
import javax.naming.InitialContext;

/**
 *
 * @author Fracido
 */
public class ClientBL extends Observable implements Runnable{

        String RouterIP;
        LocalServer LS;
        ClientMessage msg;
        String id;
        GeoCoordinate position;
        
        ClientBL(String clientName,String ipRouter, double latitude, double longitude) {
            this.id = clientName;
            this.RouterIP = ipRouter;
            this.position = new GeoCoordinate(latitude, longitude);
            msg = new ClientMessage();
        }

        public void GetLocalServer() throws Exception{

        InitialContext ctx;
        Properties props;

        InetAddress address = InetAddress.getByName(RouterIP);

        if(! address.isReachable(5000))
            throw new Exception("Router: " + RouterIP + " non raggiungibile\n");

        props = new Properties();
        props.loadFromXML(new FileInputStream("EJBconn.xml"));
        ctx = new InitialContext(props);

        EJB_CLRemote bean = (EJB_CLRemote) ctx.lookup("EJB_CLName");
        LS = bean.GetLocalServer(position);

    }

    @Override
    public void run() {
        try {
            GetLocalServer();
            msg.setAll("Connected with server"+id,true,false);
            setChanged();
            notifyObservers(msg);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
            msg.setAll("Fail Connection with server"+id,false,false);
            setChanged();
            notifyObservers(msg);
        }

    }


}
